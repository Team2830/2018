// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc2830.PowerUp;


import edu.wpi.first.wpilibj.Spark;
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.SpeedControllerGroup;
import edu.wpi.first.wpilibj.drive.DifferentialDrive;
import edu.wpi.first.wpilibj.livewindow.LiveWindow;

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {

    public static SpeedController driveTrainSpeedControllerFrontLeft;
    public static SpeedController driveTrainSpeedControllerBackLeft;
    public static SpeedController driveTrainSpeedControllerBackRight;
    public static SpeedController driveTrainSpeedControllerFrontRight;
    public static SpeedControllerGroup leftSpeedControllerGroup;
    public static SpeedControllerGroup rightSpeedControllerGroup;
        
    public static DifferentialDrive  driveTrainRobotDrive41;


    public static void init() {
        driveTrainSpeedControllerFrontLeft = new Spark(0);
        LiveWindow.addActuator("DriveTrain", "Speed Controller 1", (Spark) driveTrainSpeedControllerFrontLeft);
        driveTrainSpeedControllerFrontLeft.setInverted(false);
        driveTrainSpeedControllerBackLeft = new Spark(1);
        LiveWindow.addActuator("DriveTrain", "Speed Controller 2", (Spark) driveTrainSpeedControllerBackLeft);
        driveTrainSpeedControllerBackLeft.setInverted(false);
        driveTrainSpeedControllerBackRight = new Spark(2);
        LiveWindow.addActuator("DriveTrain", "Speed Controller 3", (Spark) driveTrainSpeedControllerBackRight);
        driveTrainSpeedControllerBackRight.setInverted(false);
        driveTrainSpeedControllerFrontRight = new Spark(3);
        LiveWindow.addActuator("DriveTrain", "Speed Controller 4", (Spark) driveTrainSpeedControllerFrontRight);
        driveTrainSpeedControllerFrontRight.setInverted(false);
        leftSpeedControllerGroup = new SpeedControllerGroup(driveTrainSpeedControllerFrontLeft,driveTrainSpeedControllerBackLeft);
        rightSpeedControllerGroup = new SpeedControllerGroup(driveTrainSpeedControllerFrontRight,driveTrainSpeedControllerBackRight);
        
        driveTrainRobotDrive41 = new DifferentialDrive(leftSpeedControllerGroup,rightSpeedControllerGroup);
        
        driveTrainRobotDrive41.setSafetyEnabled(true);
        driveTrainRobotDrive41.setExpiration(0.1);
        driveTrainRobotDrive41.setMaxOutput(1.0);

    }
}
